# This is a basic workflow to help you get started with Actions

name: Test jekyll integration

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    # Use GitHub Actions' cache to shorten build times and decrease load on servers
    - uses: actions/cache@vv2.1.0
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    
    # Tun the jekyll action
    - uses:  lemonarc/jekyll-action@1.0.0
    
    # Deploy to remote server
    - name: Deploy with rsync
      uses: burnett01/rsync-deployments@4.1
      with:
        switches: -avzr --delete --exclude="uploads" --exclude="fileadmin"
        path: _site/
        remote_path: ${{ secrets.DEPLOY_PATH }}
        remote_host: ${{ secrets.DEPLOY_SITE }}
        remote_user: ${{ secrets.DEPLOY_USER }}
        remote_key: ${{ secrets.DEPLOY_KEY }}
